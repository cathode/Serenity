<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibINI</name>
    </assembly>
    <members>
        <member name="T:LibINI.IO.IniReader">
            <summary>
            Provides a configurable method for reading and parsing INI-format data into an IniFile object.
            </summary>
        </member>
        <member name="M:LibINI.IO.IniReader.#ctor(LibINI.IO.IniReaderSettings)">
            <summary>
            Initialized a new instance of the IniReader class using the supplied IniReaderSettings.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:LibINI.IO.IniReader.ReadBytes(System.Byte[],LibINI.IniFile@)">
            <summary>
            Reads an IniFile from the supplied stream and returns it.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:LibINI.IO.IniWriter">
            <summary>
            Provides a configurable method of persisting an IniFile and it's contents as INI-format data.
            </summary>
        </member>
        <member name="M:LibINI.IO.IniWriter.#ctor(LibINI.IO.IniWriterSettings)">
            <summary>
            Initializes a new instance of the IniWriter class using the supplied IniWriterSettings.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:LibINI.IO.IniWriter.WriteBytes(System.Byte[]@,LibINI.IniFile)">
            <summary>
            Writes the source IniFile to a target array of bytes.
            </summary>
            <param name="target"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:LibINI.IO.IniWriterSettings">
            <summary>
            Provides a way to customize the operation of an IniWriter.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniWriterSettings.CommentChar">
            <summary>
            Gets or sets the character used to designate comment lines.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniWriterSettings.ValueDelimiter">
            <summary>
            Gets or sets the character used to separate name and value in an IniEntry.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniWriterSettings.Win32Style">
            <summary>
            Gets an IniWriterSettings object representing the most commonly
            used settings for INI files on the windows platform.
            </summary>
        </member>
        <member name="T:LibINI.IO.IniReaderSettings">
            <summary>
            Provides a way to customize the operation of an IniReader.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.CommentChar">
            <summary>
            Gets or sets the character used to designate comment lines.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.EntryDuplicationHandlingMethod">
            <summary>
            Gets or sets the handling method to use when duplicate entries are found.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.MaximumCompatability">
            <summary>
            Gets an IniReaderSettings that is preconfigured to maintain maximum compatability.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.ValueConcatenationChar">
            <summary>
            Gets or sets the character that is used as a separator when concatenating values.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.ValueSeparator">
            <summary>
            Gets or sets the character that is used to separate a key from a value.
            </summary>
        </member>
        <member name="P:LibINI.IO.IniReaderSettings.Win32Style">
            <summary>
            Gets an IniReaderSettings that is preconfigured to handle most INI files
            created by windows or windows software.
            </summary>
        </member>
        <member name="T:LibINI.IniSection">
            <summary>
            Represents a grouping of key/value pairs (IniEntry objects).
            </summary>
        </member>
        <member name="M:LibINI.IniSection.AddEntry(LibINI.IniEntry)">
            <summary>
            Adds an IniEntry object to the current IniSection.
            </summary>
            <param name="entry">The IniEntry object to be added.</param>
        </member>
        <member name="M:LibINI.IniSection.Clone">
            <summary>
            Creates a deep copy of the current IniSection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibINI.IniSection.CreateEntry(System.String)">
            <summary>
            Creates a new IniEntry. The new IniEntry is added to the current
            IniSection, and then returned.
            </summary>
            <param name="name">The name of the IniEntry to create.</param>
            <returns>The created IniEntry.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the name
            paramater is passed as null.</exception>
        </member>
        <member name="M:LibINI.IniSection.CreateEntry(System.String,System.String)">
            <summary>
            Creates a new IniEntry with an initial value. The new IniEntry is added
            to the current IniSection, and then returned.
            </summary>
            <param name="name">The name of the new IniEntry.</param>
            <param name="value">A value to initialize the new IniEntry with.</param>
            <returns>The created IniEntry.</returns>
            <remarks>
            If an IniEntry already exists with the same name, the existing
            IniEntry will be returned instead of creating a new one. However,
            the value in the existing IniEntry will be assigned to what was
            passed to the value param.
            </remarks>
        </member>
        <member name="M:LibINI.IniSection.ContainsEntry(LibINI.IniEntry)">
            <summary>
            Determines whether an IniEntry exists in the current IniSection.
            </summary>
            <param name="entry">The IniEntry object to check existance for.</param>
            <returns>True if it exists; otherwise false.</returns>
        </member>
        <member name="M:LibINI.IniSection.ContainsEntry(System.String)">
            <summary>
            Determines whether an IniEntry exists in the current IniSection.
            </summary>
            <param name="entryName">The name of the IniEntry object to check
            existance for.</param>
            <returns>True if it exists; otherwise false.</returns>
        </member>
        <member name="M:LibINI.IniSection.GetEnumerator">
            <summary>
            Gets an enumerator for the current IniSection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibINI.IniSection.Merge(LibINI.IniSection[])">
            <summary>
            Combines two or more IniSections and returns a new IniSection containing the combined result.
            </summary>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="M:LibINI.IniSection.RemoveEntry(LibINI.IniEntry)">
            <summary>
            Removes an IniEntry from the current IniSection.
            </summary>
            <param name="entry">The IniEntry to remove.</param>
        </member>
        <member name="M:LibINI.IniSection.RemoveEntry(System.String)">
            <summary>
            Removes an IniEntry from the current IniSection.
            </summary>
            <param name="entryName">The name of the IniEntry to remove.</param>
        </member>
        <member name="M:LibINI.IniSection.RenameEntry(System.String,System.String)">
            <summary>
            Renames an IniEntry.
            </summary>
            <remarks>
            The IniEntry must exist in the current IniSection. If no IniEntry
            is found to rename, this method returns false.
            </remarks>
            <param name="oldName">The name of the IniEntry to rename.</param>
            <param name="newName">The new name of the IniEntry.</param>
            <returns>True if the rename suceeded; otherwise false.</returns>
        </member>
        <member name="M:LibINI.IniSection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets a nongeneric enumerator for the current IniSection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LibINI.IniSection.Item(System.String)">
            <summary>
            Gets an IniEntry contained in the current IniSection.
            </summary>
            <param name="name">The name of the IniEntry to get.</param>
            <returns>An IniEntry named name.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the
            name paramater is passed as null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if no IniEntry
            is found with a name matching the name paramater.</exception>
        </member>
        <member name="P:LibINI.IniSection.Comment">
            <summary>
            Gets or sets a comment associated with the current IniSection.
            </summary>
        </member>
        <member name="P:LibINI.IniSection.CommentLines">
            <summary>
            Gets or sets the lines of comments associated with the current IniSection.
            </summary>
        </member>
        <member name="P:LibINI.IniSection.EntryCount">
            <summary>
            Gets the number of IniEntries in the current IniSection.
            </summary>
        </member>
        <member name="P:LibINI.IniSection.EntryNames">
            <summary>
            Gets a string array containing the names of all the entries contained in the current IniSection.
            </summary>
        </member>
        <member name="P:LibINI.IniSection.File">
            <summary>
            Gets the IniFile that the current IniSection is a part of.
            </summary>
        </member>
        <member name="P:LibINI.IniSection.Name">
            <summary>
            Gets the name of the current IniElement.
            </summary>
        </member>
        <member name="T:LibINI.IniEntry">
            <summary>
            Represents a single name/value pair inside of an IniSection. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:LibINI.IniEntry.Clone">
            <summary>
            Creates and returns a shallow copy of the current IniEntry.
            </summary>
            <returns>A shallow copy of the current IniEntry.</returns>
        </member>
        <member name="P:LibINI.IniEntry.Comment">
            <summary>
            Gets or sets a comment associated with the current IniEntry.
            </summary>
        </member>
        <member name="P:LibINI.IniEntry.CommentLines">
            <summary>
            Gets or sets the lines of comments associated with the current IniEntry.
            </summary>
        </member>
        <member name="P:LibINI.IniEntry.File">
            <summary>
            Gets the IniFile that owns the current IniEntry.
            </summary>
        </member>
        <member name="P:LibINI.IniEntry.Name">
            <summary>
            Gets the name of the current IniEntry.
            </summary>
        </member>
        <member name="P:LibINI.IniEntry.Value">
            <summary>
            Gets or sets the value portion of the current IniEntry.
            </summary>
        </member>
        <member name="T:LibINI.IniValue">
            <summary>
            Provides a strongly-typed way to store and retrieve values.
            </summary>
        </member>
        <member name="M:LibINI.IniValue.FromString(System.String)">
            <summary>
            Creates a new IniValue from a given string, guessing at the IniValueKind.
            </summary>
            <param name="valueString"></param>
            <returns></returns>
        </member>
        <member name="M:LibINI.IniValue.GetValueKind(System.Object)">
            <summary>
            Determines the IniValueKind of a supplied object.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:LibINI.IniValue.Value">
            <summary>
            Gets or sets the actual object value associated with the current IniValue.
            </summary>
        </member>
        <member name="P:LibINI.IniValue.Kind">
            <summary>
            Gets the IniValueKind of the current IniValue.
            </summary>
        </member>
        <member name="T:LibINI.IniFile">
            <summary>
            Represents an INI-format configuration settings file, and contains methods to add,
            remove, and modify configuration settings. This class cannot be inherited.
            </summary>
            <remarks>
            This class provides the core functionality of LibINI.
            </remarks>
        </member>
        <member name="M:LibINI.IniFile.#ctor">
            <summary>
            Initializes a new instance of the IniFile class.
            </summary>
        </member>
        <member name="F:LibINI.IniFile.InvalidNameChars">
            <summary>
            Gets the chars that cannot be used for an IniSection or IniEntry name.
            </summary>
        </member>
        <member name="F:LibINI.IniFile.InvalidValueChars">
            <summary>
            Gets a constant string containing chars that cannot be used for a IniEntry value.
            </summary>
        </member>
        <member name="M:LibINI.IniFile.AddEntry(LibINI.IniSection,LibINI.IniEntry)">
            <summary>
            Adds an IniEntry to an IniSection. If the specified IniSection does not
            exist in the current IniFile, it will be added.
            </summary>
            <param name="section">The IniSection to add to.</param>
            <param name="entry">The IniEntry to be added.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.AddEntry(System.String,LibINI.IniEntry)">
            <summary>
            Adds an IniEntry to an IniSection, specified by the section param.
            If no IniSection is found with the supplied name, a new section
            will be created, and the supplied IniEntry will be added to the
            new section.
            </summary>
            <param name="section">The name of the IniSection to add to.</param>
            <param name="entry">The IniEntry to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.AddSection(LibINI.IniSection)">
            <summary>
            Adds an IniSection to the current IniFile.
            </summary>
            <param name="section">The IniSection to add.</param>
        </member>
        <member name="M:LibINI.IniFile.Clone">
            <summary>
            Creates and returns a full clone of the current File,
            recursively cloning all IniSections and IniEntries.
            </summary>
            <returns>A full clone of the current File.</returns>
        </member>
        <member name="M:LibINI.IniFile.ContainsEntry(LibINI.IniSection,LibINI.IniEntry)">
            <summary>
            Determines whether the specified IniEntry exists in the specified IniSection,
            and whether the specified IniSection exists in the current File's IniSection list.
            </summary>
            <param name="section">The IniSection to check existance for.</param>
            <param name="entry">The IniEntry to check existance for.</param>
            <returns>True if section exists in the current File's IniSection list,
            and entry exists in section's IniEntry list, otherwise returns false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.ContainsEntry(LibINI.IniSection,System.String)">
            <summary>
            Determines whether the specified IniEntry exists in the specified IniSection,
            and whether the specified IniSection exists in the current File's IniSection list.
            </summary>
            <param name="section">The IniSection to check existance for.</param>
            <param name="entry">The name of the IniEntry to check existance for.</param>
            <returns>True if section exists in the current File's IniSection list,
            and entry exists in section's IniEntry list, otherwise returns false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.ContainsEntry(System.String,LibINI.IniEntry)">
            <summary>
            Determines whether the specified IniEntry exists in the specified IniSection,
            and whether the specified IniSection exists in the current File's IniSection list.
            </summary>
            <param name="section">The name of the IniSection to check existance for.</param>
            <param name="entry">The IniEntry to check existance for.</param>
            <returns>True if section exists in the current File's IniSection list,
            and entry exists in section's IniEntry list, otherwise returns false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.ContainsEntry(System.String,System.String)">
            <summary>
            Determines whether the specified IniEntry exists in the specified IniSection,
            and whether the specified IniSection exists in the current File's IniSection list.
            </summary>
            <param name="section">The name of the IniSection to check existance for.</param>
            <param name="entry">The name of the IniEntry to check existance for.</param>
            <returns>True if section exists in the current File's IniSection list,
            and entry exists in section's IniEntry list, otherwise returns false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.ContainsSection(LibINI.IniSection)">
            <summary>
            Determines whether the specified IniSection exists
            in the current File's IniSection list.
            </summary>
            <param name="section">The IniSection to check existance for.</param>
            <returns>True if section exists in the current File's IniSection list,
            otherwise returns false.</returns>
        </member>
        <member name="M:LibINI.IniFile.ContainsSection(System.String)">
            <summary>
            Determines whether a named IniSection exists in the current
            IniFile.
            </summary>
            <param name="section">The name of the IniSection check for.
            </param>
            <returns>True if the named IniSection exists; otherwise false.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the
            section paramater is null.</exception>
        </member>
        <member name="M:LibINI.IniFile.CreateEntry(LibINI.IniSection,System.String)">
            <summary>
            Creates an IniEntry. The new entry is added to the supplied
            section, and the supplied section is added to the current IniFile
            if it does not already exist there.
            </summary>
            <param name="section">The IniSection to create the new IniEntry in.
            </param>
            <param name="entry">The name of the new IniEntry to create.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.CreateEntry(LibINI.IniSection,System.String,System.String)">
            <summary>
            Creates an IniEntry with an initial value. The new IniEntry is
            added to the supplied IniSection. The supplied IniSection is added
            to the current IniFile if it doesnt not already exist there.
            </summary>
            <param name="section">The IniSection to create the new IniEntry in.
            </param>
            <param name="entry">The name of the new IniEntry to create.</param>
            <param name="value">The initial value of the new IniEntry.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.CreateEntry(System.String,System.String)">
            <summary>
            Creates an IniEntry. The new IniEntry is added to the named
            IniSection. If the named IniSection does not exist, it will be
            created.
            </summary>
            <param name="section">The name of the IniSection to create the new
            IniEntry in.</param>
            <param name="entry">The name of the new IniEntry to create.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.CreateEntry(System.String,System.String,System.String)">
            <summary>
            Creates an IniEntry with an initial value. The new IniEntry is
            added to the named IniSection. If the named IniSection does not
            exist, it will be created.
            </summary>
            <param name="section">The name of the IniSection to create the new
            IniEntry in.</param>
            <param name="entry">The name of the new IniEntry to create.</param>
            <param name="value">The initial value of the new IniEntry.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.CreateSection(System.String)">
            <summary>
            Creates a new IniSection. The new IniSection is added to the
            current IniFile.
            </summary>
            <remarks>
            If a section already exists with the supplied name, it will be
            returned instead.
            </remarks>
            <param name="section">
            The name of the new IniSection to create.
            </param>
        </member>
        <member name="M:LibINI.IniFile.GetEnumerator">
            <summary>
            Gets a generic enumerator for the current IniFile.
            </summary>
            <returns>A generic enumerator for the current IniFile</returns>
        </member>
        <member name="M:LibINI.IniFile.IsValidName(System.String)">
            <summary>
            Determines whether the specified string can be used as a valid name
            for an IniSection or IniEntry object.
            </summary>
            <param name="name">The name to validate.</param>
            <returns>
            False if the name paramater contains any invalid chars.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the name
            paramater is passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.IsValidValue(System.String)">
            <summary>
            Determines whether the specified name can be used as a valid value
            for an IniEntry.
            </summary>
            <param name="value">The value to validate.</param>
            <returns>False if the value paramater contains any invalid chars.
            </returns>
        </member>
        <member name="M:LibINI.IniFile.Merge(LibINI.IniFile[])">
            <summary>
            Merges any number of IniFiles into the current IniFile.
            </summary>
            <param name="files">An array of IniFiles to merge.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the files
            paramater is passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.MergeFiles(System.String[])">
            <summary>
            Merges any number of INI-format files into the current IniFile.
            </summary>
            <param name="filePaths">An array of file paths.</param>
        </member>
        <member name="M:LibINI.IniFile.RemoveEntry(LibINI.IniSection,LibINI.IniEntry)">
            <summary>
            Removes an IniEntry from a specified IniSection.
            </summary>
            <param name="section">The IniSection to remove the IniEntry from.</param>
            <param name="entry">The IniEntry to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RemoveEntry(LibINI.IniSection,System.String)">
            <summary>
            Removes an IniEntry from a specified IniSection.
            </summary>
            <param name="section">The IniSection to remove the IniEntry from.</param>
            <param name="entry">The name of the IniEntry to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RemoveEntry(System.String,LibINI.IniEntry)">
            <summary>
            Removes an IniEntry from a specified IniSection.
            </summary>
            <param name="section">The name of the IniSection to remove the IniEntry from.</param>
            <param name="entry">The IniEntry to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RemoveEntry(System.String,System.String)">
            <summary>
            Removes an IniEntry from a specified IniSection.
            </summary>
            <param name="section">The name of the IniSection to remove the IniEntry from.</param>
            <param name="entry">The name of the IniEntry to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either the
            section or entry paramaters are passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RemoveSection(LibINI.IniSection)">
            <summary>
            Removes an IniSection from the current File.
            </summary>
            <param name="section">The IniSection to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the
            section paramater is passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RemoveSection(System.String)">
            <summary>
            Removes an IniSection from the current File.
            </summary>
            <param name="section">The name of the IniSection to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the
            section paramater is passed as null.</exception>
        </member>
        <member name="M:LibINI.IniFile.RenameSection(System.String,System.String)">
            <summary>
            Renames an IniSection.
            </summary>
            <remarks>
            The IniSection being renamed must exist in the current IniFile.
            </remarks>
            <param name="oldName">The name of the IniSection to rename.</param>
            <param name="newName">The new name of the IniSection.</param>
        </member>
        <member name="P:LibINI.IniFile.Item(System.String)">
            <summary>
            Gets an IniSection contained in the current IniFile.
            </summary>
            <param name="name">The name of the IniSection to get.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the
            name paramater is passed as null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if no IniSection
            is found with a name matching the name paramater.</exception>
        </member>
        <member name="P:LibINI.IniFile.Item(System.String,System.String)">
            <summary>
            Gets an IniEntry by it's name and section name from the current IniFile. If the IniEntry
            is not found, a value of null is returned.
            </summary>
            <param name="sectionName"></param>
            <param name="entryName"></param>
            <returns></returns>
        </member>
        <member name="P:LibINI.IniFile.IsCaseSensitive">
            <summary>
            Gets or sets a value that determines if section and entry names are case-sensitive.
            </summary>
        </member>
        <member name="P:LibINI.IniFile.EntryCount">
            <summary>
            Gets the total number of IniEntries contained
            in all IniSections in the current File.
            </summary>
        </member>
        <member name="P:LibINI.IniFile.DefaultSection">
            <summary>
            Gets a pseudo-IniSection that is used to hold any IniEntry objects
            that are not actually placed in an IniSection. (Used to support legacy INI.)
            </summary>
        </member>
        <member name="P:LibINI.IniFile.SectionCount">
            <summary>
            Gets the total number of IniSections contained in the current IniFile.
            </summary>
        </member>
        <member name="P:LibINI.IniFile.SectionNames">
            <summary>
            Gets a string array containing the names of all the sections in the current IniFile.
            </summary>
        </member>
        <member name="T:LibINI.IO.IniEntryDuplicationHandlingMethod">
            <summary>
            Controls the way duplicate IniEntries are handled when encountered during reading.
            </summary>
        </member>
        <member name="F:LibINI.IO.IniEntryDuplicationHandlingMethod.UseFirst">
            <summary>
            Instructs the IniReader to use the first IniEntry it finds with any name.
            </summary>
        </member>
        <member name="F:LibINI.IO.IniEntryDuplicationHandlingMethod.UseLast">
            <summary>
            Instructs the IniReader to use the last IniEntry it finds with any name.
            </summary>
        </member>
        <member name="F:LibINI.IO.IniEntryDuplicationHandlingMethod.Concatenate">
            <summary>
            Instructs the IniReader to concatenate the values of any duplicate IniEntries.
            </summary>
        </member>
        <member name="F:LibINI.IO.IniEntryDuplicationHandlingMethod.MultiValue">
            <summary>
            Instructs the IniReader to transform the value to a MultiValue.
            </summary>
        </member>
        <member name="F:LibINI.IO.IniEntryDuplicationHandlingMethod.RemoveAll">
            <summary>
            Instructs the IniReader to remove all copies of the duplicate IniEntries (including the first and last).
            </summary>
        </member>
        <member name="T:LibINI.IniValueKind">
            <summary>
            Used to indicate what kind of value an IniValue has.
            </summary>
        </member>
        <member name="F:LibINI.IniValueKind.Unknown">
            <summary>
            The value's type is not recognized or not supported.
            Usually indicates that null will be returned for the value.
            </summary>
        </member>
        <member name="F:LibINI.IniValueKind.String">
            <summary>
            The value is a string type.
            </summary>
        </member>
        <member name="F:LibINI.IniValueKind.Boolean">
            <summary>
            The value is a bool type.
            </summary>
        </member>
        <member name="F:LibINI.IniValueKind.Number">
            <summary>
            The value is an int type.
            </summary>
        </member>
        <member name="F:LibINI.IniValueKind.MultiString">
            <summary>
            The value is a string[] type.
            </summary>
        </member>
    </members>
</doc>
